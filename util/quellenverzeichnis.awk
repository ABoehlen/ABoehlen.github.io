#!/usr/local/bin/awk -f
#########################################################################################
#
# quellenverzeichnis.awk V1.0 13.03.2022
# Autor: Adrian Boehlen
#
# Script generiert die geordnete Quellenliste aus der originalen, ungeordneten Textdatei.
# Als Trennzeichen ist "$" zu verwenden, andernfalls Zeile 17 anpassen
# Die Reihenfolge ist im verweise.js definiert.
# Der Output erfolgt als HTML-Code, der dann direkt ins gewuenschte Dokument integriert
# werden kann. Weblinks werden beruecksichtigt, muessen aber am Beginn des Textes stehen.
#
#########################################################################################

BEGIN {
  # Feldtrenner in Quellen-Textdokument
  FS = "$";

  # Scriptname ermitteln (siehe https://unix.stackexchange.com/questions/228072/how-to-print-own-script-name-in-mawk)
  getline t < "/proc/self/cmdline";
  split(t, a, "\0");
  scriptname = sprintf("%s", a[3]);

  # Usage ausgeben, wenn Anzahl Argumente nicht stimmt und Programm beenden
  if (ARGC != 2) {
    printf("\n****************************************************\n") > "/dev/stderr";
    printf("     Usage: %s <Quelltextfile>\n", scriptname)             > "/dev/stderr";
    printf("****************************************************\n\n") > "/dev/stderr";
    exit;
  }

  # nachstehend benoetigtes Array mit Nummerierung eintragen
  # dieses muss identisch mit dem betreffenden in verweise.js sein
  ##################################

blyIntrDict["aa"] = "1";
blyIntrDict["ab"] = "2";
blyIntrDict["ac"] = "3";

  ##################################
  # Kopie von urspruenglichem Array unter dem einheitlichen Namen "verweise" anlegen
  for (i in blyIntrDict)
    verweise[i] = blyIntrDict[i];
}

{
  # Daten zeilenweise einlesen und in Array quellen ablegen
  quellen[$1] = $2;
}

END {
  # Nummer von verweise mit Text von quellen verbinden
  for (i in verweise)
    quellen_nr[verweise[i]] = quellen[i];

  #### Daten ausgeben ####
  ele = length(quellen_nr);
  print "<!-- automatically generated by quellenverzeichnis.awk -->";
  print "<table border=0 width=\"100%\" style=\"text-align:left;\">";

  for (i = 1; i <= ele; i++) {
    # erste Spalte mit hochgestellter Nummer ausgeben
    printf("%s\n%s%s%s\n", "<tr>", "<td style=\"vertical-align:top\"><sup>", i, "</sup></td>");

    # falls Quelle ein Weblink ist...
    if (quellen_nr[i] ~ /^http/) {
      anz = split(quellen_nr[i], weblink, " ");

      # ...Link setzen, damit neues Tab geoeffnet wird
      printf("%s%s%s%s%s", "<td style=\"font-size: 14px\"><a target=\"_blank\" href=\"", weblink[1], "\">", weblink[1], "</a>");
      
      # Falls noch Erlaeuterungen folgen...
      if (anz > 1) {

        # ...Resttext bilden und ausgeben, sowie Tabellenspalte und Zeile abschliessen...
        rest = "";
        delete weblink[1];
        for (j = 2; j <= (anz); j++)
          rest = rest " " weblink[j];
        printf("%s%s\n%s\n", rest, "</td>", "</tr>");
      }

      # ...andernfalls Tabellenspalte und Zeile direkt abschliessen
      else
        printf("%s\n%s\n","</td>", "</tr>");
    }
    else {
      # Offlinequellen als normalen Text ausgeben, Tabellenspalte und Zeile abschliessen
      printf("%s%s%s\n%s\n", "<td style=\"font-size: 14px\">", quellen_nr[i], "</td>", "</tr>");
    }
  }
  print "</table>";
}